#include <DHT.h>
#include <DHT_U.h>
#include <Adafruit_Sensor.h>

// C·∫•u h√¨nh c·∫£m bi·∫øn DHT11
#define DHTPIN 2
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

// C·∫•u h√¨nh ch√¢n ƒëi·ªÅu khi·ªÉn r∆° le
#define RELAY1 3  // ƒêi·ªÅu khi·ªÉn c·∫∑p 1
#define RELAY2 4  // ƒêi·ªÅu khi·ªÉn c·∫∑p 2
#define BUZZER 6  // Chu√¥ng c·∫£nh b√°o

// C·∫£m bi·∫øn kh√≥i/gas
#define SMOKE_SENSOR A0  

// Bi·∫øn ki·ªÉm so√°t h·ªá th·ªëng
unsigned long startTime = 0;
bool isRelay1Running = true;
bool errorInRelay2 = false;
bool fireDetected = false;

void setup() {
    Serial.begin(9600);
    Serial1.begin(9600);  // Nh·∫≠n l·ªánh t·ª´ ESP8266

    dht.begin();
    pinMode(RELAY1, OUTPUT);
    pinMode(RELAY2, OUTPUT);
    pinMode(BUZZER, OUTPUT);
    pinMode(SMOKE_SENSOR, INPUT);
    
    digitalWrite(RELAY1, LOW);
    digitalWrite(RELAY2, LOW);
    digitalWrite(BUZZER, LOW);
    
    startTime = millis();
}

void loop() {
    float temp = dht.readTemperature();
    float humidity = dht.readHumidity();
    int smokeLevel = analogRead(SMOKE_SENSOR);

    if (isnan(temp) || isnan(humidity)) {
        Serial.println("L·ªói ƒë·ªçc c·∫£m bi·∫øn!");
        return;
    }

    Serial.print("Nhi·ªát ƒë·ªô: "); Serial.print(temp);
    Serial.print("¬∞C | ƒê·ªô ·∫©m: "); Serial.print(humidity);
    Serial.println("%");

    // Gi√°m s√°t ch√°y
    if (smokeLevel > 400) {  // Ng∆∞·ª°ng ph√°t hi·ªán ch√°y
        Serial.println("üî• C·∫¢NH B√ÅO: Ph√°t hi·ªán ch√°y!");
        fireDetected = true;
        digitalWrite(BUZZER, HIGH);
    } else {
        fireDetected = false;
        digitalWrite(BUZZER, LOW);
    }

    unsigned long currentTime = millis();
    unsigned long elapsedTime = (currentTime - startTime) / 1000; // T√≠nh theo gi√¢y

    if (elapsedTime >= 600 && elapsedTime < 900) {
        Serial.println("‚è≥ C·∫∑p 2 ƒëang kh·ªüi ƒë·ªông...");
        digitalWrite(RELAY2, HIGH);
        if (random(0, 10) < 2) {  // 20% kh·∫£ nƒÉng l·ªói
            Serial.println("‚ö†Ô∏è L·ªñI: C·∫∑p 2 kh√¥ng th·ªÉ kh·ªüi ƒë·ªông!");
            errorInRelay2 = true;
            digitalWrite(RELAY2, LOW);
        }
    }

    if (elapsedTime >= 900) {  
        if (errorInRelay2) {
            Serial.println("‚úÖ C·∫∑p 1 ti·∫øp t·ª•c ch·∫°y do c·∫∑p 2 g·∫∑p s·ª± c·ªë.");
            errorInRelay2 = false;
        } else {
            isRelay1Running = !isRelay1Running;
            Serial.println("üîÑ Chuy·ªÉn c·∫∑p ƒëi·ªÅu h√≤a...");
        }

        digitalWrite(RELAY1, isRelay1Running ? HIGH : LOW);
        digitalWrite(RELAY2, !isRelay1Running ? HIGH : LOW);
        startTime = millis();
    }

    // Nh·∫≠n l·ªánh t·ª´ ESP8266 qua Serial1
    if (Serial1.available()) {
        String command = Serial1.readStringUntil('\n');
        command.trim();  

        if (command == "ON1") {
            digitalWrite(RELAY1, HIGH);
            Serial.println("‚ö° B·∫≠t c·∫∑p 1!");
            Serial1.println("RELAY1_ON");
        } else if (command == "OFF1") {
            digitalWrite(RELAY1, LOW);
            Serial.println("‚ùå T·∫Øt c·∫∑p 1!");
            Serial1.println("RELAY1_OFF");
        } else if (command == "ON2") {
            digitalWrite(RELAY2, HIGH);
            Serial.println("‚ö° B·∫≠t c·∫∑p 2!");
            Serial1.println("RELAY2_ON");
        } else if (command == "OFF2") {
            digitalWrite(RELAY2, LOW);
            Serial.println("‚ùå T·∫Øt c·∫∑p 2!");
            Serial1.println("RELAY2_OFF");
        } else if (command == "STATUS") {  
            String status = "üî• Tr·∫°ng th√°i: \n";
            status += " - C·∫∑p 1: " + String(digitalRead(RELAY1) ? "B·∫≠t" : "T·∫Øt") + "\n";
            status += " - C·∫∑p 2: " + String(digitalRead(RELAY2) ? "B·∫≠t" : "T·∫Øt") + "\n";
            status += " - Nhi·ªát ƒë·ªô: " + String(temp) + "¬∞C\n";
            status += " - ƒê·ªô ·∫©m: " + String(humidity) + "%\n";
            status += " - Kh√≥i/Gas: " + String(smokeLevel) + "\n";
            Serial1.println(status);
        }
    }

    delay(1000);
}
